S -> PROGRAM ID STATSMENT_BLOCK END_DOT

STATSMENT_BLOCK -> STATSMENT DELIMETER STATSMENT_BLOCK
STATSMENT_BLOCK -> STATSMENT

STATSMENT -> DIM
STATSMENT -> IO
STATSMENT -> EXPRESSION
STATSMENT -> LOOP
STATSMENT -> IF

EXPRESSION -> ID EQ_KW ID OPERATION ID
EXPRESSION -> ID EQ_KW ID OPERATION CONST
EXPRESSION -> ID EQ_KW CONST OPERATION ID
EXPRESSION -> ID EQ_KW CONST OPERATION CONST
EXPRESSION -> ID EQ_KW CONST
EXPRESSION -> ID EQ_KW ID

OPERATION -> +
OPERATION -> *
OPERATION -> -
OPERATION -> /

LOOP -> WHILE_KW CONDITION DO_KW STATSMENT_BLOCK END_KW

IF -> IF_KW CONDITION THEN_KW STATSMENT_BLOCK END_KW ELSE_KW STATSMENT_BLOCK END_KW
IF -> IF_KW CONDITION THEN_KW STATSMENT_BLOCK END_KW

CONDITION -> ID COMPARSION ID
CONDITION -> ID COMPARSION CONST

COMPARSION -> <
COMPARSION -> >
COMPARSION -> ==
COMPARSION -> >=
COMPARSION -> !=
COMPARSION -> <=


DIM -> DIM_KW ID AS_KW TYPE

TYPE -> string
TYPE -> int

IO -> OUTPUT CONST
IO -> OUTPUT ID
IO -> ID EQ_KW INPUT_KW

DIM_KW -> dim
AS_KW -> as
EQ_KW -> =
WHILE_KW -> while
DO_KW -> do
IF_KW -> if
THEN_KW -> then
ELSE_KW -> else
INPUT_KW -> input

OUTPUT -> output
PROGRAM -> program
END_DOT -> end.
END_KW -> end
CONST -> const

DELIMETER -> ;

ID -> id